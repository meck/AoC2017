{-# START_FILE {{name}}.cabal #-}
name:                {{name}}
version:             0.1.0.0
-- synopsis:
-- description:
homepage:            https://github.com/{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}#readme
license:             BSD3
author:              {{author-name}}{{^author-name}}Author name here{{/author-name}}
maintainer:          {{author-email}}{{^author-email}}example@example.com{{/author-email}}
copyright:           {{copyright}}{{^copyright}}{{year}}{{^year}}2017{{/year}} {{author-name}}{{^author-name}}Author name here{{/author-name}}{{/copyright}}
build-type:          Simple
cabal-version:       >=1.10
extra-source-files:  README.md

executable {{name}}
  hs-source-dirs:      src
  main-is:             Main.hs
  default-language:    Haskell2010
  build-depends:       base >= 4.7 && < 5

{-# START_FILE Setup.hs #-}
import Distribution.Simple
main = defaultMain

{-# START_FILE README.md #-}
# {{name}}

{-# START_FILE Input.txt #-}
Input goes here

{-# START_FILE src/Main.hs #-}
module Main where

import Data.Char

solve1 = id
solve2 = id

prepareInput = reverse . dropWhile isSpace . reverse
 
main :: IO ()
main = do
  input <- prepareInput <$> readFile "Input.txt"
  putStrLn $ "Part 1: " ++ show (solve1 input)
  putStrLn $ "Part 2: " ++ show (solve2 input)
